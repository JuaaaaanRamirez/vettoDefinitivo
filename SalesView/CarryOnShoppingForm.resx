<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbCheck.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADdYAAA3WAZBveZwAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAZHklEQVR4Xu3df6ite14X8HXnlz/G8UcmA6GWg+ME+WOm/gmxlElhSrApxISYIkwx07QICkMsikgd
        nVCilFSCMO3HHzpjF8lGNCuQ/EkpI2EwSimDOSja3Jlxpvdzzj7nrL3PZ5+911rPetbz/TyvN7wO57y5
        3Lv3etbc92fu2Xff3Qc/+EEAYGPKEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDo
        rSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7K
        EgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwB
        gN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDo
        rSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7K
        EgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgDorSwBgN7KEgA4XPJh8Unxuvj4eGn1x61BWQIAteRV
        8RXxzfE98fb4hXh3TH/Avg/Eu+Ln4ofiX8Q/ijfFx1V//qWUJQDwUPKS+Oz4ppiGfn/gT/G78V/j78Rr
        q7/2OZUlAGxZ8qHx5+N74zdif7jP5Vfi2+Pz47nq45pTWQLAFiXT/9v/y/HLsT/OS/uZ+PzqY5xLWQLA
        liTPxZ+Ld8T+EF/aj8cfrz7mU5UlAGxF8ifjp2N/eNfm+Xhd9fEfqywBoLvkk+PHYn9o12z6Nwr+VXx0
        9fkcqiwBoLPkc+P/xv7AjmL6bYrXVJ/XIcoSALpK/lq8P/ZHdTTT9xx4Q/X53VdZAkA3ycviO2N/SEc2
        HTF/o/pc76MsAaCT5JXxn2N/QLv47viQ6vN+lrIEgC6Sz4h3xv5odvNf4vdUn/9tyhIAOkj+cIz6xX6H
        +o/xkup1qJQlAIwu2dL4P/Jt1WtRKUsAGFmyxfF/5Eur1+SmsgSAUSVbHv/Je+OzqtdmX1kCwIiSrY//
        I78Wn1i9Ro+UJQCMJjH+103/fYMPr16rSVkCwEgS41/7xur1mpQlAIwiMf63+534feXrVpUAMILE+N/t
        n5WvXVUCwNolxv9+3hef/NTrd7MAgLVLjP9hvuep1/BmAQBrlhj/w30gPv3a67j/CwBYs8T4H++t117L
        /V8AwFolxv90j78W4KkXGADWJjH+8/jqx6/p/gsMAGuTGP/5/IfHr+v+iwwAa5IY/3m9EB/x4LW9+WID
        wBokxv88/syD1/fmCw4Al5YY//P5zgev8c0XHQAuKTH+5/V/4rnyxQeAS0iM/zJeVz4AAFhaYvyX84Xl
        QwCAJSXGf1lfVT4IAFhKYvyX9w/LhwEAS0iM/2V8d/lAAODcEuN/Oc+XDwUAzikx/pf1M+WDAYBzSYz/
        5f1a+XAA4BwS478OL5QPCADmlhj/9fiV8iEBwJwS478u/618UAAwl8T4r89by4cFAHNIjP86fUf5wADg
        VInxX6+/Vz40ADhFYvzX7a+UDw4AjpUY//V7Y/nwAOAYifEfw6vLBwgAh0qM/xh+8cHzuvkAAeBQifEf
        x1sePLObDxEADpEY/7H8iQfP7eaDBID7Soz/WH4zXvbg2d18mABwH4nxH8+/ffz89h8mANxHYvzH9Jce
        P8P9BwoAd0mM/5jeF698/Bz3HyoAPEti/Mf1Hdee5f4vAOA2ifEf1/+Lj7/2PPd/AQCVxPiP7c1PPdOb
        BQDsS4z/2KZ/9e/3PvVcbxYA8Ehi/Mf39eWzrUoASIz/+N4Vryifb1UCsG2J8e/hq6vnOylLALYrMf49
        fH88Vz3jSVkCsE2J8e/hv0f5j/4fKUsAticx/j38eryqesb7yhKAbUmMfw/Tt/t9ffWMbypLALYjMf59
        fGX1jCtlCcA2JMa/j2vf6/8uZQlAf4nx72P6iv+XVs/5NmUJQG+J8e9jGv+XVc/5WcoSgL4S49/HUeM/
        KUsAekqMfx9Hj/+kLAHoJzH+fZw0/pOyBKCXxPj3cfL4T8oSgD4S49/HD8TJ4z8pSwB6SIx/H7ON/6Qs
        ARhfYvz7mHX8J2UJwNgS49/H7OM/KUsAxpUY/z7OMv6TsgRgTInx7+Ns4z8pSwDGkxj/Ps46/pOyBGAs
        ifHv4+zjPylLAMaRGP8+Fhn/SVkCMIbE+Pex2PhPyhKA9UuMfx+Ljv+kLAFYt8T497H4+E/KEoD1Sox/
        HxcZ/0lZArBOifHv42LjPylLANYnMf59XHT8J2UJwLokxr+Pi4//pCwBWI/E+PexivGflCUA65AY/z5W
        M/6TsgTg8hLj38eqxn9SlgBcVmL8+1jd+E/KEoDLSYx/H6sc/0lZAnAZifHvY7XjPylLAJaXGP8+Vj3+
        k7IEYFmJ8e9j9eM/KUsAlpMY/z6GGP9JWQKwjMT49zHM+E/KEoDzS4x/H0ON/6QsATivxPj3Mdz4T8oS
        gPNJjH8fQ47/pCwBOI/E+Pcx7PhPyhKA+SXGv4+hx39SlgDMKzH+fQw//pOyBGA+ifHvo8X4T8oSgHkk
        xr+PNuM/KUsATpcY/z5ajf+kLAE4TWL8+2g3/pOyBOB4ifHvo+X4T8oSgOMkxr+PtuM/KUsADpcY/z5a
        j/+kLAE4TGL8+2g//pOyBOD+EuPfxybGf1KWANxPYvz72Mz4T8oSgLslxr+PTY3/pCwBeLbE+PexufGf
        lCUAt0uMfx+bHP9JWQJQS4x/H5sd/0lZAvC0xPj38dbY7PhPyhKA6xLj38fmx39SlgA8kRj/Poz/lbIE
        4KHE+Pdh/PeUJQDTXhj/Roz/DWUJsHWJ8e/D+BfKEmDLEuPfh/G/RVkCbFVi/Psw/s9QlgBblBj/Poz/
        HcoSYGsS49+H8b+HsgTYksT492H876ksAbYiMf59GP8DlCXAFiTGvw/jf6CyBOguMf59GP8jlCVAZ4nx
        78P4H6ksAbpKjH8fxv8EZQnQUWL8+zD+JypLgG4S49+H8Z9BWQJ0khj/Poz/TMoSoIvE+Pdh/GdUlgAd
        JMa/D+M/s7IEGF1i/Psw/mdQlpeQfFh8Unxm/Nn4q/EP4tvjG+OvxxfH58Rr4iOrPw9AYvz7MP5nUpZL
        SP5Q/O348Xh37D/w+/rt+Ln4hvhj8eLqrwVsR2L8+zD+Z1SW5zA9xPi8+Nb4pdh/yHP59fiXMf2Tgo+u
        Pg6gr8T492H8z6ws55S8Nr43fjP2H+65vS/eHm+sPi6gl8T492H8F1CWc0im36f/vvhA7D/YS/iJ+Lzq
        4wTGlxj/Poz/QsryFMnvj++K98f+Q12DH4nPrD5uYEyJ8e/D+C+oLI+RvDKm399/IfYf6Bq9LV5bfR7A
        OBLj34fxX1hZHir5glj69/hPNf3WxN+N56rPCVi3xPj3YfwvoCwPkXxtrOH3+Y/17+Ll1ecGrFNi/Psw
        /hdSlveRTN+4Z/rq/v0HOaqfjT9QfZ7AuiTGvw/jf0FleZfkE+InY/9Bju5d8dnV5wusQ2L8+zD+F1aW
        z5JM36r3V2P/QXbx3vjy6vMGLisx/n0Y/xUoy9skb4gRvsr/VN9cff7AZSTGvw/jvxJlWUmmb+xz7Pfs
        H9FbqtcBWFZi/Psw/itSljclHxXviP0HuQWOALigxPj3YfxXpiz3JS+K52P/QW6JIwAuIDH+fRj/FSrL
        fcmbrx7gljkCYEGJ8e/D+K9UWT6SvOnqAeIIgEUkxr8P479iZTlJpv8Rvif2H+bWOQLgjBLj34fxX7my
        nCQ/evUQuc4RAGeQGP8+jP8A6vLhv++//zC5zhEAM0qMfx/GfxBPF7vdc/FTsf9AeZojAGaQGP8+jP9A
        ni52uy+6epDczREAJ0iMfx/GfzDXf7HbvTi2+A1/TuEIgCMkxr8P4z+g67/Y7b7k6mFyGEcAHCAx/n28
        LYz/gJ78ZLd7abwz9h8s9+cIgHtIjH8fxn9gT36y273+6oFyPEcAPENi/Psw/oN78pPd7luuHiqncQRA
        ITH+fRj/Bp78xBf/zckRAHsS49+H8W/i4Q+73auvHizzcQRAJMa/D+PfyMMfdruvuXq4zMsRwKYlxr8P
        49/Mwx92ux++esDMzxHAJiXGvw/j39CUV8QLcfOBMx9HAJuSGP8+jH9TUz43bj5w5ucIYBMS49+H8W9s
        yl+Imw+d83AE0Fpi/Psw/s1N+Vtx88FzPo4AWkqMfx/GfwOm/OO4+fA5L0cArSTGvw/jvxFTvi9uvgE4
        P0cALSTGvw/jvyFTfixuvglYhiOAoSXGvw/jvzFTfjFuvhFYjiOAISXGvw/jv0FTfituvhlYliOAoSTG
        vw/jv1FTHADr4AhgCInx78P4b9gUvwWwHo4AVi0x/n0Y/42b4osA18URwColxr8P40/eAv41wDVyBLAq
        ifHvw/jzwBTfCGidHAGsQmL8+zD+PDbFtwJeL0cAF5UY/z6MP9dM8R8DWjdHABeRGP8+jD9PmeI/B7x+
        jgAWlRj/Pow/pSmviBfi5puGdXEEsIjE+Pdh/LnVwx92ux++erOwbo4Aziox/n0Yf57p4Q+73ddcvWFY
        P0cAZ5EY/z6MP3d6+MNu9+qrNw1jcAQwq8T492H8uZcnP9nt3nH15mEMjgBmkRj/Pow/9/bkJ7vdt1y9
        gRiHI4CTJMa/D+PPQZ78ZLd7/dWbiLE4AjhKYvz7MP4c7MlPdruXxjtj/03FGBwBHCQx/n0Yf45y/Re7
        3ZdcvaEYjyOAe0mMfx/Gn6Nd/8Vu9+LwxYDjcgTwTInx78P4c5Kni93ui67eXIzJEUApMf59GH9O9nSx
        2z0XPxX7bzbG4gjgmsT492H8mUVd7nZvuHqjMS5HAA8kxr8P489synKS/OjVG45xOQI2LjH+fRh/ZlWW
        k2T6G8d7Yv8NyHgcARuVGP8+jD+zK8tHkjddvfkYmyNgYxLj34fx5yzKcl/y5qs3IWNzBGxEYvz7mMb/
        Q6rnDKcqy33Ji+L52H9TMiZHQHOJ8e/D+HNWZXlT8lHhGwT14AhoKjH+fRh/zq4sK8lr4t2x/yZlTI6A
        ZhLj34fxZxFleZtk+v4A74v9NytjcgQ0kRj/Pow/iynLZ0m+MBwBPTgCBpcY/z6MP4sqy7skjoA+HAGD
        Sox/Hz8Yxp9FleV9JI6APhwBg0mMfx/Gn4soy/tKHAF9OAIGkRj/Pow/F1OWh0gcAX04AlYuMf59GH8u
        qiwPlTgC+nAErFRi/Psw/lxcWR4jcQT04QhYmcT492H8WYWyPFbiCOjDEbASifHvw/izGmV5isQR0Icj
        4MIS49+H8WdVyvJUiSOgD0fAhSTGvw/jz+qU5RwSR0AfjoCFJca/D+PPKpXlXBJHQB+OgIUkxr8P489q
        leWcEkdAH46AM0uMfx/Gn1Ury7kljoA+HAFnkhj/Pow/q1eW55A4AvpwBMwsMf59GH+GUJbnkjgC+nAE
        zCQx/n0Yf4ZRlueUOAL6cAScKDH+fRh/hlKW55Y4AvpwBBwpMf59GH+GU5ZLSBwBfTgCDpQY/z6MP0Mq
        y6UkjoA+HAH3lBj/Pow/wyrLJSWOgD4cAXdIjH8fxp+hleXSEkdAH46AWyTGvw/jz/DK8hISR0AfjoAb
        EuPfh/GnhbK8lMQR0Icj4Epi/Psw/rRRlpeUOAL62PwRkBj/Pow/rZTlpSWOgD42ewQkxr8P4087ZbkG
        iSOgj80dAYnx78P401JZrkXiCOhjM0dAYvz7MP60VZZrkjgC+mh/BCTGvw/jT2tluTaJI6CPtkdAYvz7
        MP60V5ZrlDgC+mh3BCTGvw/jzyaU5VoljoA+2hwBifHvw/izGWW5ZokjoI/hj4DE+Pdh/NmUsly7xBHQ
        x7BHQGL8+zD+bE5ZjiBxBPQx3BGQGP8+jD+bVJajSBwBfQxzBCTGvw/jz2aV5UgSR0Afqz8CEuPfh/Fn
        08pyNIkjoI/VHgGJ8e/D+LN5ZTmixBHQx+qOgMT492H8IcpyVIkjoI/VHAGJ8e/D+MOVshxZ4gjo4+JH
        QGL8+zD+sKcsR5c4Avq42BGQGP8+jD/cUJYdJI6APhY/AhLj34fxh0JZdpE4AvpY7AhIjH8fxh9uUZad
        JI6APs5+BCTGvw/jD89Qlt0kjoA+znYEJMa/D+MPdyjLjhJHQB+zHwGJ8e/D+MM9lGVXiSOgj9mOgMT4
        92H84Z7KsrPEEdDHyUdAYvz7+Pdh/OGeyrK7xBHQx9FHQGL8+zD+cKCy3ILEEdDHwUdAYvz7MP5whLLc
        isQR0Me9j4DE+Pdh/OFIZbkliSOgjzuPgMT492H84QRluTWJI6CPW4+AxPj3YfzhRGW5RYkjoI+njoDE
        +Pdh/GEGZblViSOgj8dHQGL8+zD+MJOy3LLEEdDHW8L492H8YUZluXWJI6CPF4qO8Rh/mFlZMv39xhEA
        K2H84QzKkocSRwBclvGHMylLnkgcAXAZxh/OqCy5LnEEwLKMP5xZWfK0xBEAyzD+sICypJY4AuC8jD8s
        pCy5XeIIgPMw/rCgsuTZEkcAzMv4w8LKkrsljgCYh/GHCyhL7idxBMBpjD9cSFlyf4kjAI5j/OGCypLD
        JI4AOIzxhwsrSw6XOALgfow/rEBZcpzEEQDPZvxhJcqS4yWOAKgZf1iRsuQ0iSMArjP+sDJlyekSRwA8
        ZPxhhcqSeSSOALbO+MNKlSXzSRwBbJXxhxUrS+aVOALYGuMPK1eWzC9xBLAVxh8GUJacR+IIoDvjD4Mo
        S84ncQTQlfGHgZQl55U4AujG+MNgypLzSxwBdGH8YUBlyTISRwCjM/4wqLJkOYkjgFEZfxhYWbKsxBHA
        aIw/DK4sWV7iCGAUxh8aKEsuI3EEsHbGH5ooSy4ncQSwVsYfGilLLitxBLA2xh+aKUsuL3EEsBbGHxoq
        S9YhcQRwacYfmipL1iNxBHApxh8aK0vWJXEEsDTjD82VJeuTOAJYivGHDShL1ilxBHBuxh82oixZr8QR
        wLk8H8YfNqIsWbfEEcDcjD9sTFmyfokjgLkYf9igsmQMiSOAUxl/2KiyZByJI4BjGX/YsLJkLIkjgEMZ
        f9i4smQ8iSOA+zL+QP5uUJSMKXEEcBfjDzxQlowrcQRwG+MPPFaWjC1xBHCT8QeuKUvGlzgCeMT4A08p
        S3pIHAEYf6BUlvSROAK2y/gDtypLekkcAdtj/IFnKkv6SRwB22H8gTuVJT0ljoD+jD9wL2VJX4kjoC/j
        D9xbWdJb4gjox/gDBylL+kscAX0Yf+BgZck2JI6A8Rl/4ChlyXYkjoBxGX/gaGXJtiSOgPEYf+AkZcn2
        JI6AcRh/4GRlyTYljoD1M/7ALMqS7UocAetl/IHZlCXbljgC1sf4A7MqS0gcAeth/IHZlSVMEkfA5Rl/
        4CzKEh5JHAGXY/yBsylL2Jc4ApZn/IGzKku4KXEELMf4A2dXllBJHAHnZ/yBRZQl3CZxBJyP8QcWU5bw
        LIkjYH7GH1hUWcJdEkfAfIw/sLiyhPtIHAGnM/7ARZQl3FfiCDie8QcupizhEIkj4HDGH7iosoRDJY6A
        +zP+wMWVJRwjcQTczfgDq1CWcKzEEXA74w+sRlnCKRJHwNOMP7AqZQmnShwBTxh/YHXKEuaQOAKMP7BS
        ZQlzSbZ8BBh/YLXKEuaUbPEIMP7AqpUlzC3Z0hFg/IHVK0s4h+QL4rdifyy7+ddh/IHVK0s4l+TT4pdi
        fzQ7+EB8XfU5A6xRWcI5JR8bPxL7Azqy6Z9qvLH6XAHWqizh3JKXxD+J/SEd0fRPMz61+hwB1qwsYSnJ
        l8V7Y39UR/H2+Njq8wJYu7KEJSWfFf8j9sd1zd4T3xAvqT4fgBGUJSwteVH8xfhfsT+2a/L++K74xOpz
        ABhJWcKlJC+Lr4xfjf3xvaTpK/z/TfzB6mMGGFFZwqUlL4+vjd+I/TFe2g/FH6k+RoCRlSWsRfIx8aXx
        /fHbsT/O5/Lz8U3xR6uPCaCDsoQ1Sj40/lT80/jl2B/tU0xf1Df9P/2vildVf22AbsoSRpC8Nv5mfGtM
        v0f/n+J/RvVPCqYv4Pvf8ZPxtvjn8ffjT8fLqz8/QGdlCaNLPjI+JT4jXhkvqv44gK0qSwCgt7IEAHor
        SwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IE
        AHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCg
        t7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHor
        SwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IE
        AHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCgt7IEAHorSwCg
        t7IEAHorSwCgsw/u/j93P4N2wL+vUQAAAABJRU5ErkJggg==
</value>
  </data>
</root>